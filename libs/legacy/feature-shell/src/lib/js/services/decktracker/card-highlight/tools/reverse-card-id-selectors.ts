/**
 * AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
 * Generated by build-reverse-mappings.ts
 * Run: npm run build:reverse-synergies to update
 * MAIN ENTRY POINT FOR REVERSE SYNERGIES - delegates to specialized files
 */

import { DeckCard } from '@firestone/game-state';
import { CardsFacadeService, HighlightSide } from '@firestone/shared/framework/core';
import { Selector } from '../cards-highlight-common.service';
import { reverseMinionSelector } from './reverse-minion-selectors';
import { reverseSpellSelector } from './reverse-spell-selectors';
import { reverseGeneralSelector } from './reverse-general-selectors';

export const reverseCardIdSelector = (
	cardId: string,
	card: DeckCard | undefined,
	inputSide: HighlightSide,
	allCards: CardsFacadeService,
): Selector => {
	const refCard = allCards.getCard(cardId);
	if (!refCard) return null;

	// Try minion-specific selectors first
	if (refCard.type?.toUpperCase() === 'MINION') {
		const minionResult = reverseMinionSelector(cardId, card, inputSide, allCards);
		if (minionResult) return minionResult;
	}

	// Try spell-specific selectors
	if (refCard.type?.toUpperCase() === 'SPELL') {
		const spellResult = reverseSpellSelector(cardId, card, inputSide, allCards);
		if (spellResult) return spellResult;
	}

	// Try general selectors (weapons, locations, mechanics)
	const generalResult = reverseGeneralSelector(cardId, card, inputSide, allCards);
	if (generalResult) return generalResult;

	return null;
};
/**
 * AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
 * Generated by build-reverse-mappings.ts
 * Run: npm run build:reverse-synergies to update
 * GENERAL REVERSE SYNERGIES (weapons, locations, mechanics, etc.)
 */

import { CardIds } from '@firestone-hs/reference-data';
import { DeckCard } from '@firestone/game-state';
import { CardsFacadeService, HighlightSide } from '@firestone/shared/framework/core';
import { Selector } from '../cards-highlight-common.service';
import { and, or, side, inDeck, inHand, cardIs } from '../selectors';

export const reverseGeneralSelector = (
	cardId: string,
	card: DeckCard | undefined,
	inputSide: HighlightSide,
	allCards: CardsFacadeService,
): Selector => {
	const refCard = allCards.getCard(cardId);
	if (!refCard) return null;

	// Card type reverse synergies
	if (refCard.type?.toUpperCase() === 'LOCATION') {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.DispossessedSoul_CORE_REV_901
		));
	}

	// General complex conditions
	// mechanics:battlecry+cost:more:2 (1 card)
	if (refCard.cost > 2 && refCard.mechanics?.includes('BATTLECRY')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.AllTogetherNowTavernBrawl
		));
	}

	// mechanics:secret (17 cards)
	if (refCard.mechanics?.includes('SECRET')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.AncientMysteries,
			CardIds.AnonymousInformant_CORE_REV_841,
			CardIds.Arcanologist,
			CardIds.ArcanologistCore,
			CardIds.ChattyBartender,
			CardIds.CostumedSinger,
			CardIds.DunBaldarBunker,
			CardIds.EaglehornBowVanilla,
			CardIds.GhastlyGravedigger,
			CardIds.KabalCrystalRunner_WON_308,
			CardIds.MadScientist,
			CardIds.MysteriousChallenger_WON_334,
			CardIds.PrivateEye,
			CardIds.ScuttlebuttGhoul_CORE_REV_900,
			CardIds.SecretStudiesTavernBrawl,
			CardIds.SpringTheTrap,
			CardIds.Zuljin_WarriorsOfAmani_THD_010p
		));
	}

	// mechanics:deathrattle (12 cards)
	if (refCard.mechanics?.includes('DEATHRATTLE')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.BaronRivendare_CORE_FP1_031,
			CardIds.BarrensTrapper,
			CardIds.NecriumBlade,
			CardIds.NecriumVial,
			CardIds.PlayDead_CORE_ICC_052,
			CardIds.ReturnPolicy_MIS_102,
			CardIds.RollTheBones_CORE_ICC_201,
			CardIds.RottenRodent,
			CardIds.ShallowGrave,
			CardIds.Smokescreen,
			CardIds.SummonerDarkmarrow_VAC_503,
			CardIds.TotemOfTheDead_LOOTA_845
		));
	}

	// mechanics:battlecry (7 cards)
	if (refCard.mechanics?.includes('BATTLECRY')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.BattleTotem_LOOTA_846,
			CardIds.BrannBronzebeard_LOE_077,
			CardIds.BrilliantMacaw,
			CardIds.CorruptTheWaters,
			CardIds.MurmuringElemental,
			CardIds.RallyTheTroopsTavernBrawl,
			CardIds.Shudderblock_ShudderblockToken_TOY_501t
		));
	}

	// mechanics:legendary+other:legendary (1 card)
	if (refCard.rarity?.toUpperCase() === 'LEGENDARY') {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.ArchVillainRafaam_BeholdMyStuff_THD_032p
		));
	}

	// mechanics:excavate,legendary,quickdraw,tradeable+other:legendary (1 card)
	if (refCard.rarity?.toUpperCase() === 'LEGENDARY') {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.BountyBoard_WW_003
		));
	}

	// mechanics:lifesteal+other:restoreHealth (1 card)
	if (refCard.mechanics?.includes('LIFESTEAL')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.BrittleboneDestroyer
		));
	}

	// mechanics:battlecry,combo (1 card)
	if (refCard.mechanics?.includes('BATTLECRY')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.FieldContact
		));
	}

	// cost:more:7 (1 card)
	if (refCard.cost > 7) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.FlamesOfTheFirelord_FIR_923
		));
	}

	// cost:equal:2 (1 card)
	if (refCard.cost === 2) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.GreedyPartner_WW_901
		));
	}

	// cost:more:3 (1 card)
	if (refCard.cost > 3) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.HemetJungleHunter
		));
	}

	// mechanics:taunt (3 cards)
	if (refCard.mechanics?.includes('TAUNT')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.HoldTheLineTavernBrawl,
			CardIds.LastStand,
			CardIds.StolenGoods_WON_110
		));
	}

	// mechanics:divineShield (2 cards)
	if (refCard.mechanics?.includes('DIVINE_SHIELD')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.Jitterbug,
			CardIds.TorethTheUnbreaking_EDR_258
		));
	}

	// cost:equal:3 (1 card)
	if (refCard.cost === 3) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.LinedancePartner_WW_433
		));
	}

	// cost:equal:1 (4 cards)
	if (refCard.cost === 1) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.PipThePotent_WW_394,
			CardIds.PrinceLiam,
			CardIds.RollingStone,
			CardIds.ThirstyDrifter_WW_387
		));
	}

	// mechanics:rush (1 card)
	if (refCard.mechanics?.includes('RUSH')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.PluckyPaintfin_TOY_517
		));
	}

	// cost:equal:4 (1 card)
	if (refCard.cost === 4) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.RowdyPartner_WW_906
		));
	}

	// mechanics:deathrattle+cost:less:5 (1 card)
	if (refCard.cost < 5 && refCard.mechanics?.includes('DEATHRATTLE')) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.SketchyInformation
		));
	}

	// cost:more:5 (1 card)
	if (refCard.cost > 5) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.SummerFlowerchild
		));
	}

	// cost:more:1+other:notInInitialDeck (1 card)
	if (refCard.cost > 1) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.TaethelanBloodwatcher_WW_430
		));
	}

	// cost:more:4 (1 card)
	if (refCard.cost > 4) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(
			CardIds.TimberTambourine
		));
	}

	return null;
};
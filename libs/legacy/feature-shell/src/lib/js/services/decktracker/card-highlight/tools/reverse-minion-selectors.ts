/**
 * AUTO-GENERATED FILE - DO NOT EDIT MANUALLY
 * Generated by build-reverse-mappings.ts
 * MINION-SPECIFIC REVERSE SYNERGIES
 */

import { CardIds } from '@firestone-hs/reference-data';
import { DeckCard } from '@firestone/game-state';
import { CardsFacadeService, HighlightSide } from '@firestone/shared/framework/core';
import { Selector } from '../cards-highlight-common.service';
import { and, or, side, inDeck, inHand, cardIs } from '../selectors';

export const reverseMinionSelector = (
	cardId: string,
	card: DeckCard | undefined,
	inputSide: HighlightSide,
	allCards: CardsFacadeService,
): Selector => {
	const refCard = allCards.getCard(cardId);
	if (!refCard) return null;

	const matchingCardIds: CardIds[] = [];

	// COST_LESS_4 + HAS_MECHANIC_DEATHRATTLE + MINION (2 cards)
	if (refCard.cost < 4 && refCard.mechanics?.includes('DEATHRATTLE') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.DreadRaptor_TLC_432,
			CardIds.Razorboar
		);
	}

	// COST_LESS_4 + MINION + NEUTRAL (1 cards)
	if (refCard.cost < 4 && refCard.type?.toUpperCase() === 'MINION' && refCard.classes?.includes('NEUTRAL')) {
		matchingCardIds.push(
			CardIds.WarCommandsTavernBrawl
		);
	}

	// COST_LESS_5 + HAS_MECHANIC_DEATHRATTLE + MINION (1 cards)
	if (refCard.cost < 5 && refCard.mechanics?.includes('DEATHRATTLE') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.RazorfenBeastmaster
		);
	}

	// COST_LESS_6 + HAS_MECHANIC_DEATHRATTLE + MINION (1 cards)
	if (refCard.cost < 6 && refCard.mechanics?.includes('DEATHRATTLE') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.DeathSpeakerBlackthorn_BAR_329
		);
	}

	// COST_MORE_4 + HAS_MECHANIC_DEATHRATTLE + MINION (1 cards)
	if (refCard.cost > 4 && refCard.mechanics?.includes('DEATHRATTLE') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.FerociousFelbat_EDR_892
		);
	}

	// ATTACK_MORE_0 + MINION (1 cards)
	if (refCard.attack > 0 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.Crystology
		);
	}

	// ATTACK_MORE_4 + MINION (2 cards)
	if (refCard.attack > 4 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.ClimbingHook_VAC_932,
			CardIds.GiantAnaconda
		);
	}

	// BEAST + COST_LESS_4 (1 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('BEAST') && refCard.cost < 4) {
		matchingCardIds.push(
			CardIds.TrialOfTheJormungars_WON_028
		);
	}

	// BEAST + COST_LESS_6 (2 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('BEAST') && refCard.cost < 6) {
		matchingCardIds.push(
			CardIds.GuardianAnimals,
			CardIds.PetCollector
		);
	}

	// BEAST + MINION (4 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('BEAST') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.AbsorbentParasite,
			CardIds.Banjosaur,
			CardIds.TheCurator_CORE_KAR_061,
			CardIds.TheCurator_KAR_061
		);
	}

	// COST_EQUAL_1 + MINION (4 cards)
	if (refCard.cost === 1 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.ApothecarysCaravan,
			CardIds.BoogieDown,
			CardIds.K90tron,
			CardIds.TrustyFishingRod_VAC_960
		);
	}

	// COST_EQUAL_8 + MINION (2 cards)
	if (refCard.cost === 8 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.JuicyPsychmelon,
			CardIds.SilverVanguard
		);
	}

	// COST_LESS_3 + MINION (3 cards)
	if (refCard.cost < 3 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.BandOfBeesTavernBrawl,
			CardIds.CallToArms,
			CardIds.OracleOfElune
		);
	}

	// COST_LESS_4 + MINION (1 cards)
	if (refCard.cost < 4 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.AnimateDead
		);
	}

	// COST_LESS_5 + MINION (4 cards)
	if (refCard.cost < 5 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.GrizzledGuardian,
			CardIds.Hybridization_TLC_236,
			CardIds.OakenSummons,
			CardIds.OakenSummons_CORE_LOOT_309
		);
	}

	// COST_MORE_0 + MINION (1 cards)
	if (refCard.cost > 0 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.Rally
		);
	}

	// COST_MORE_4 + MINION (1 cards)
	if (refCard.cost > 4 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.CaricatureArtist_TOY_391
		);
	}

	// COST_MORE_5 + MINION (1 cards)
	if (refCard.cost > 5 && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.ScepterOfSummoning
		);
	}

	// DEMON + MINION (2 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('DEMON') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.DirgeOfDespair,
			CardIds.KanrethadEbonlocke_KanrethadPrimeToken
		);
	}

	// DRAGON + MINION (4 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('DRAGON') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.CollectorsIreTavernBrawlToken,
			CardIds.DrocomurchanicasTavernBrawlToken,
			CardIds.TheCurator_CORE_KAR_061,
			CardIds.TheCurator_KAR_061
		);
	}

	// ELEMENTAL + LEGENDARY (1 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('ELEMENTAL') && refCard.rarity?.toUpperCase() === 'LEGENDARY') {
		matchingCardIds.push(
			CardIds.AlakirTheWindlord_ElementalEvocation_THD_026p
		);
	}

	// HAS_MECHANIC_BATTLECRY + MINION (7 cards)
	if (refCard.mechanics?.includes('BATTLECRY') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.AuctionhouseGavel,
			CardIds.BrannBronzebeard_BrannsSaddle_THD_042p,
			CardIds.FairyTaleForest_TOY_507,
			CardIds.Murmur_GDB_448,
			CardIds.ParrotSanctuary_VAC_409,
			CardIds.Snapdragon,
			CardIds.Turbulus_WORK_013
		);
	}

	// HAS_MECHANIC_COMBO + MINION (1 cards)
	if (refCard.mechanics?.includes('COMBO') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.LuckyComet_GDB_873
		);
	}

	// HAS_MECHANIC_DEATHRATTLE + MINION (38 cards)
	if (refCard.mechanics?.includes('DEATHRATTLE') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.AmuletOfUndying,
			CardIds.ArchdruidOfThorns_EDR_491,
			CardIds.AwakenTheMakers,
			CardIds.BrittleboneBuccaneer_VAC_436,
			CardIds.CarrionStudies,
			CardIds.DeadRinger,
			CardIds.DeathBlossomWhomper,
			CardIds.DeathGrowl,
			CardIds.DeathlyDeathTavernBrawl,
			CardIds.DeathstriderTavernBrawl,
			CardIds.DevoutBlessingsTavernBrawlToken,
			CardIds.ExpeditedBurialTavernBrawl,
			CardIds.FelfireBonfire_VAC_952,
			CardIds.ForsakenLieutenant_AV_601,
			CardIds.HedgeMaze_REV_333,
			CardIds.HedgeMaze_REV_792,
			CardIds.HighCultistHerenn_TLC_810,
			CardIds.JewelOfNzoth,
			CardIds.MummyMagic,
			CardIds.NecriumApothecary,
			CardIds.NineLives,
			CardIds.NzothTheCorruptor,
			CardIds.NzothTheCorruptor_DarkMachinations_THD_039p,
			CardIds.PrincessTavernBrawl,
			CardIds.RavenousFelhunter_EDR_891,
			CardIds.ScourgeIllusionist,
			CardIds.Shattershambler,
			CardIds.TamsinsPhylactery,
			CardIds.TerrorscaleStalker,
			CardIds.TerrorscaleStalker_CORE_UNG_800,
			CardIds.TombLurker_CORE_ICC_098,
			CardIds.TombLurker_ICC_098,
			CardIds.Tuskpiercer,
			CardIds.Tuskpiercer_CORE_BAR_330,
			CardIds.TwilightsCall,
			CardIds.UnearthedRaptor,
			CardIds.VengefulSpirit_BAR_328,
			CardIds.YellingYodeler
		);
	}

	// HAS_MECHANIC_GIVES_DIVINE_SHIELD + MINION (3 cards)
	if (refCard.mechanics?.includes('GIVES_DIVINE_SHIELD') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.FancyPackaging_TOY_881,
			CardIds.Funkfin,
			CardIds.RighteousReservesTavernBrawl
		);
	}

	// HAS_MECHANIC_IMP + MINION (1 cards)
	if (refCard.mechanics?.includes('IMP') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.ImpendingCatastrophe
		);
	}

	// HAS_MECHANIC_RUSH + MINION (10 cards)
	if (refCard.mechanics?.includes('RUSH') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.AkaliTheRhino,
			CardIds.ClearTheWay,
			CardIds.DivingGryphon,
			CardIds.PotionOfSparkingTavernBrawl,
			CardIds.RushTheStage,
			CardIds.SpecialDeliveryTavernBrawl,
			CardIds.StageDive,
			CardIds.StageDive_StageDive,
			CardIds.TownCrier_CORE_GIL_580,
			CardIds.TownCrier_GIL_580
		);
	}

	// HAS_MECHANIC_TAUNT + MINION (12 cards)
	if (refCard.mechanics?.includes('TAUNT') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.Battlepickaxe_WW_347,
			CardIds.Bolster,
			CardIds.BulkUp,
			CardIds.DetonationJuggernaut_WW_329,
			CardIds.EnduranceTrainingTavernBrawl,
			CardIds.FirePlumesHeart,
			CardIds.IntoTheFray,
			CardIds.QualityAssurance_TOY_605,
			CardIds.RazormaneBattleguard,
			CardIds.TortollanTraveler_VAC_518,
			CardIds.UnluckyPowderman_WW_367,
			CardIds.ValstannStaghelm_WON_345
		);
	}

	// HAS_MECHANIC_WHELP + MINION (1 cards)
	if (refCard.mechanics?.includes('WHELP') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.RaidBossOnyxia_ONY_004
		);
	}

	// LEGENDARY + MINION (4 cards)
	if (refCard.rarity?.toUpperCase() === 'LEGENDARY' && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.DisksOfLegendTavernBrawl,
			CardIds.InspiringPresenceTavernBrawl,
			CardIds.RingOfPhaseshiftingTavernBrawl,
			CardIds.RoyalGreatswordTavernBrawlToken
		);
	}

	// MECH + MINION (5 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('MECH') && refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.AbsorbentParasite,
			CardIds.CollectorsIreTavernBrawlToken,
			CardIds.DrocomurchanicasTavernBrawlToken,
			CardIds.GorillabotA3,
			CardIds.GorillabotA3Core
		);
	}

	// MINION + MURLOC (3 cards)
	if (refCard.type?.toUpperCase() === 'MINION' && refCard.races?.map(r => r.toUpperCase()).includes('MURLOC')) {
		matchingCardIds.push(
			CardIds.DrocomurchanicasTavernBrawlToken,
			CardIds.TheCurator_CORE_KAR_061,
			CardIds.TheCurator_KAR_061
		);
	}

	// MINION + NEUTRAL (2 cards)
	if (refCard.type?.toUpperCase() === 'MINION' && refCard.classes?.includes('NEUTRAL')) {
		matchingCardIds.push(
			CardIds.MeekMasteryTavernBrawl,
			CardIds.MulchMadnessTavernBrawl
		);
	}

	// MINION + NOT_TRIBELESS (14 cards)
	if (refCard.type?.toUpperCase() === 'MINION' && refCard.races && refCard.races.length > 0) {
		matchingCardIds.push(
			CardIds.AllYouCanEat_VAC_528,
			CardIds.AmalgamOfTheDeep,
			CardIds.FlightOfTheFirehawk_TLC_222,
			CardIds.MenagerieJug_CORE_WON_142,
			CardIds.MenagerieJug_WON_142,
			CardIds.MenagerieMug_CORE_WON_141,
			CardIds.MenagerieMug_WON_141,
			CardIds.PartyAnimal,
			CardIds.RoaringApplause,
			CardIds.RockMasterVoone_ETC_121,
			CardIds.SpiritOfTheMountain_TLC_229,
			CardIds.ThePurator,
			CardIds.TortollanStoryteller_TLC_254,
			CardIds.TrustyCompanion_WW_027
		);
	}

	// MINION + PIRATE (1 cards)
	if (refCard.type?.toUpperCase() === 'MINION' && refCard.races?.map(r => r.toUpperCase()).includes('PIRATE')) {
		matchingCardIds.push(
			CardIds.CollectorsIreTavernBrawlToken
		);
	}

	// MINION + TOTEM (3 cards)
	if (refCard.type?.toUpperCase() === 'MINION' && refCard.races?.map(r => r.toUpperCase()).includes('TOTEM')) {
		matchingCardIds.push(
			CardIds.TotemicMightLegacy,
			CardIds.TotemicMightVanilla,
			CardIds.TotemicSurge
		);
	}

	// MINION + UNDEAD (2 cards)
	if (refCard.type?.toUpperCase() === 'MINION' && refCard.races?.map(r => r.toUpperCase()).includes('UNDEAD')) {
		matchingCardIds.push(
			CardIds.AmorphousSlime,
			CardIds.SinisterSoulcage_YOG_513
		);
	}

	// ATTACK_MORE_4 (1 cards)
	if (refCard.attack > 4) {
		matchingCardIds.push(
			CardIds.StoryOfBarnabus_TLC_231
		);
	}

	// BEAST (73 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('BEAST')) {
		matchingCardIds.push(
			CardIds.AddledGrizzly,
			CardIds.AddledGrizzly_WON_009,
			CardIds.AzsharanSaber_SunkenSaberToken,
			CardIds.BigDreams,
			CardIds.BunnyStomper_WW_435,
			CardIds.ButchTavernBrawl,
			CardIds.CallPet_GVG_017,
			CardIds.CastleKennels_REV_362,
			CardIds.CastleKennels_REV_790,
			CardIds.CattleRustler_WW_351,
			CardIds.CowerInFear_TLC_823,
			CardIds.Dinositter_TLC_822,
			CardIds.ExoticHoundmaster_EDR_226,
			CardIds.FaithfulCompanions,
			CardIds.FangboundDruid,
			CardIds.Fetch_TOY_352,
			CardIds.Goldrinn_EDR_480,
			CardIds.HarpoonGun,
			CardIds.HemetFoamMarksman_TOY_355,
			CardIds.HerbivoreAssistant_DINO_419,
			CardIds.JungleGym_TOY_359,
			CardIds.KathrenaWinterwisp,
			CardIds.KingKrush_KingsDecree_THD_012p,
			CardIds.KingOfBeasts,
			CardIds.KingOfBeasts_WON_162,
			CardIds.KnightOfTheWild,
			CardIds.KnightOfTheWild_WON_003,
			CardIds.LivingSeedRank1,
			CardIds.LivingSeedRank1_LivingSeedRank2Token,
			CardIds.LivingSeedRank1_LivingSeedRank3Token,
			CardIds.Malorne,
			CardIds.Malorne_WON_011,
			CardIds.MastersCall,
			CardIds.MastersCall_CORE_TRL_339,
			CardIds.MenagerieWarden_CORE_KAR_065,
			CardIds.MenagerieWarden_KAR_065,
			CardIds.MenagerieWarden_WON_305,
			CardIds.MessengerBuzzard_WW_807,
			CardIds.MysteryEgg_MysteryEggToken_TOY_351t,
			CardIds.MysteryEgg_TOY_351,
			CardIds.Oondasta,
			CardIds.PaintedCanvasaur_TOY_350,
			CardIds.PeacefulPiper,
			CardIds.PeacefulPiper_FriendlyFace,
			CardIds.PossessedAnimancer_DINO_131,
			CardIds.PredatoryInstincts,
			CardIds.RamkahenWildtamer,
			CardIds.RoostingGargoyle,
			CardIds.RoostingGargoyle_CORE_REV_351,
			CardIds.ScavengersIngenuity,
			CardIds.ScrapShot,
			CardIds.SelectiveBreederCore,
			CardIds.Serpentbloom,
			CardIds.Shadehound,
			CardIds.Shadehound_CORE_MAW_009,
			CardIds.Shadehound_ShadehoundToken,
			CardIds.ShandoWildclaw,
			CardIds.ShandoWildclaw_RileTheHerd,
			CardIds.ShandoWildclaw_Transfiguration,
			CardIds.StarvingTavernBrawl,
			CardIds.StormpikeBattleRam,
			CardIds.StranglethornHeart,
			CardIds.SupremeDinomancy_TLC_828,
			CardIds.TavishStormpike_BAR_038,
			CardIds.TendingDragonkin_FIR_960,
			CardIds.TheFoodChain_TLC_830,
			CardIds.ThornmantleMusician,
			CardIds.Thunderbringer_WW_440,
			CardIds.VirmenSensei_CFM_816,
			CardIds.VirmenSensei_WON_300,
			CardIds.WarsongWrangler,
			CardIds.WingCommanderIchman_AV_336,
			CardIds.WitchingHour
		);
	}

	// DEMON (29 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('DEMON')) {
		matchingCardIds.push(
			CardIds.AllFelBreaksLoose,
			CardIds.AllFelBreaksLoose_AllFelBreaksLooseToken,
			CardIds.AllFelBreaksLoose_CORE_MAW_012,
			CardIds.AllShallServeTavernBrawl,
			CardIds.BlackHole_GDB_126,
			CardIds.BloodreaverGuldan_CORE_ICC_831,
			CardIds.BloodreaverGuldan_ICC_831,
			CardIds.CariaFelsoul,
			CardIds.CraneGame_TOY_884,
			CardIds.Demonfuse,
			CardIds.Demonfuse_DarkFusionEnchantment,
			CardIds.Demonfuse_WON_093,
			CardIds.Felosophy,
			CardIds.FelscaleEvoker,
			CardIds.FreeAdmission,
			CardIds.GameMasterNemsy_TOY_524,
			CardIds.InfernalStratagem_GDB_122,
			CardIds.MalganisCore,
			CardIds.Malganis_GVG_021,
			CardIds.PitCommander,
			CardIds.RagingFelscreamerCore,
			CardIds.RagingFelscreamer_BT_416,
			CardIds.SenseDemonsLegacy_EX1_317,
			CardIds.SenseDemonsVanilla_VAN_EX1_317,
			CardIds.SigilOfReckoning,
			CardIds.TabletopRoleplayer_TOY_915,
			CardIds.UmpiresGrasp_TOY_641,
			CardIds.Voidcaller,
			CardIds.VoidcallerCore
		);
	}

	// DRAGON (74 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('DRAGON')) {
		matchingCardIds.push(
			CardIds.AlexstraszasChampion,
			CardIds.AmberWhelp,
			CardIds.ArcaneBreath,
			CardIds.BlackwingCorruptor,
			CardIds.BlackwingCorruptor_WON_329,
			CardIds.BreathOfDreams,
			CardIds.BreathOfTheInfinite,
			CardIds.BroodKeeper_EDR_457,
			CardIds.CandleBreath,
			CardIds.Chillmaw,
			CardIds.Chillmaw_CORE_AT_123,
			CardIds.Chronobreaker,
			CardIds.ClericOfScales,
			CardIds.CloudSerpent_TLC_888,
			CardIds.ClutchOfCorruption_EDR_454,
			CardIds.CorrosiveBreath,
			CardIds.CrazedNetherwing,
			CardIds.DaringDrake,
			CardIds.Darkrider_EDR_456,
			CardIds.DesertNestmatron_WW_826,
			CardIds.DraconicDreamTavernBrawl,
			CardIds.DragonAffinityTavernBrawl,
			CardIds.DragonBreeder,
			CardIds.DragonConsort,
			CardIds.DragonGolem_WW_822,
			CardIds.DragonbloodTavernBrawl,
			CardIds.DragonboneRitualTavernBrawl,
			CardIds.Dragoncaster,
			CardIds.DragonfirePotion,
			CardIds.DragonmawSentinel,
			CardIds.DragonriderTalritha_DRG_235,
			CardIds.DrakonidOperative,
			CardIds.DrakonidOperativeCore,
			CardIds.Duskbreaker_LOOT_410,
			CardIds.FiretreeWitchdoctor,
			CardIds.FlyOffTheShelves_TOY_714,
			CardIds.FrizzKindleroost,
			CardIds.FutureEmissary_WON_140,
			CardIds.FyeTheSettingSun_WW_825,
			CardIds.GiftwrappedWhelp_TOY_386,
			CardIds.HeraldOfFlame_TRLA_176,
			CardIds.HornOfWrathion,
			CardIds.Kazakusan_ONY_005,
			CardIds.LightningBreath,
			CardIds.MalygosAspectOfMagic,
			CardIds.MoltenBreath,
			CardIds.NaralexHeraldOfTheFlights_EDR_844,
			CardIds.NetherBreath_DRG_205,
			CardIds.NetherspiteHistorian,
			CardIds.NetherspiteHistorian_CORE_KAR_062,
			CardIds.OnyxianWarder,
			CardIds.PetalPeddler_EDR_889,
			CardIds.RedscaleDragontamer,
			CardIds.RedscaleDragontamer_CORE_DMF_194,
			CardIds.RingmasterWhatley,
			CardIds.SandBreath_DRG_233,
			CardIds.ScaleReplica_TOY_387,
			CardIds.Scalerider,
			CardIds.Scaleworm,
			CardIds.Skyfin,
			CardIds.Soridormi_WON_146,
			CardIds.SpinetailDrake_WW_820,
			CardIds.SplishSplashWhelp_WW_819,
			CardIds.Stormhammer,
			CardIds.SuccumbToMadness_EDR_455,
			CardIds.TakeToTheSkies_WW_816,
			CardIds.TastyFlyfish,
			CardIds.Timewarden,
			CardIds.TimewinderZarimi_TOY_385,
			CardIds.TormentedDreadwing_EDR_572,
			CardIds.TwilightGuardian,
			CardIds.TwilightWhelp,
			CardIds.WingCommander,
			CardIds.WyrmrestAgent
		);
	}

	// ELEMENTAL (46 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('ELEMENTAL')) {
		matchingCardIds.push(
			CardIds.AnimatedAvalanche,
			CardIds.AquaArchivist,
			CardIds.AridStormer,
			CardIds.AzeriteGiant_WW_025,
			CardIds.Blazecaller,
			CardIds.BlazingAccretion_GDB_302,
			CardIds.BralmaSearstone_TLC_228,
			CardIds.CloudSerpent_TLC_888,
			CardIds.DangBlastedElemental_WW_397,
			CardIds.ElementalAllies,
			CardIds.ElementalEvocation,
			CardIds.ElementaryReaction,
			CardIds.ErodedSediment_WW_428,
			CardIds.FireBreath_DINO_406,
			CardIds.FirePlumeHarbinger,
			CardIds.FlameRevenant,
			CardIds.FrostLichJaina_CORE_ICC_833,
			CardIds.FrostLichJaina_ICC_833,
			CardIds.FrostfinChomper,
			CardIds.GraniteForgeborn,
			CardIds.Gyreworm,
			CardIds.KalimosPrimalLord,
			CardIds.KalimosPrimalLord_Core_UNG_211,
			CardIds.KindlingElemental,
			CardIds.Lamplighter_VAC_442,
			CardIds.LilypadLurker,
			CardIds.LivingPrairie_WW_024,
			CardIds.MesaduneTheFractured_WW_429,
			CardIds.MinecartCruiser_WW_326,
			CardIds.OverflowSurger_WW_424,
			CardIds.PrimalDungeoneer,
			CardIds.Sandbinder,
			CardIds.Saruun_GDB_304,
			CardIds.ShaleSpider_DEEP_034,
			CardIds.SkarrTheCatastrophe_WW_026,
			CardIds.SolarFlare_GDB_305,
			CardIds.SpontaneousCombustion_GDB_456,
			CardIds.SteamSurger,
			CardIds.StoneSentinel,
			CardIds.TaintedRemnant_YOG_519,
			CardIds.Therazane_DEEP_036,
			CardIds.Thunderbringer_WW_440,
			CardIds.UnchainedGladiator,
			CardIds.WailingVapor,
			CardIds.WailingVapor_CORE_WC_042,
			CardIds.WindsweptPageturner_TLC_220
		);
	}

	// HAS_MECHANIC_GIVES_HERO_ATTACK (8 cards)
	if (refCard.mechanics?.includes('GIVES_HERO_ATTACK')) {
		matchingCardIds.push(
			CardIds.HenchClanThug,
			CardIds.HenchClanThugCore,
			CardIds.Hookfist3000,
			CardIds.Hookfist3000_CORE_NX2_028,
			CardIds.KeeneyeSpotter,
			CardIds.Pufferfist,
			CardIds.Shockspitter,
			CardIds.SockPuppetSlitherspear_MIS_710
		);
	}

	// MECH (31 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('MECH')) {
		matchingCardIds.push(
			CardIds.Bubblebot_TSC_059,
			CardIds.ClickClocker,
			CardIds.ClockworkKnight,
			CardIds.DrBoomMadGenius,
			CardIds.DrBoom_BoomBarrage_THD_034p,
			CardIds.DynOMatic,
			CardIds.DynOMaticCore,
			CardIds.FrequencyOscillator,
			CardIds.GaiaTheTechtonic_TSC_029,
			CardIds.GoboglideTech,
			CardIds.IniStormcoil_TSC_649,
			CardIds.InventorBoom_TOY_607,
			CardIds.InventorsAura,
			CardIds.KangorsEndlessArmy,
			CardIds.MechaShark_TSC_054,
			CardIds.MimironTheMastermind,
			CardIds.PitStop,
			CardIds.ProstheticHand_DEEP_015,
			CardIds.RadarDetector_TSC_079,
			CardIds.RingmasterWhatley,
			CardIds.SeafloorGateway_TSC_055,
			CardIds.SeascoutOperator_TSC_646,
			CardIds.SecurityAutomaton_TSC_928,
			CardIds.SootSpewer,
			CardIds.SootSpewer_WON_033,
			CardIds.TimelineAccelerator_WON_139,
			CardIds.TinyWorldbreaker_YOG_527,
			CardIds.TramOperator,
			CardIds.TrenchSurveyor_TSC_642,
			CardIds.Ursatron,
			CardIds.WreckemAndDeckem_TOY_603
		);
	}

	// MURLOC (41 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('MURLOC')) {
		matchingCardIds.push(
			CardIds.AzsharanScavenger_SunkenScavengerToken,
			CardIds.BloodscentVilefin,
			CardIds.Braingill_GDB_878,
			CardIds.Clownfish,
			CardIds.ColdlightSeerCore,
			CardIds.ColdlightSeerLegacy_EX1_103,
			CardIds.ColdlightSeerVanilla,
			CardIds.CookiesLadleTavernBrawl,
			CardIds.DiveTheGolakkaDepths_TLC_426,
			CardIds.EveryfinIsAwesome,
			CardIds.FinjaTheFlyingStar,
			CardIds.FinjaTheFlyingStar_CORE_CFM_344,
			CardIds.GentleMegasaur_UNG_089,
			CardIds.GorlocRavager,
			CardIds.GrimscaleChum,
			CardIds.GrimscaleOracleLegacy,
			CardIds.GrimscaleOracleVanilla,
			CardIds.HotSpringGlider_TLC_428,
			CardIds.IceFishing_CORE_ICC_089,
			CardIds.IceFishing_ICC_089,
			CardIds.ItsRainingFin,
			CardIds.LushwaterMurcenary,
			CardIds.LushwaterScout,
			CardIds.MurlocTidecallerCore,
			CardIds.MurlocTidecallerLegacy,
			CardIds.MurlocTidecallerVanilla,
			CardIds.MurlocWarleaderCore,
			CardIds.MurlocWarleaderLegacy_EX1_507,
			CardIds.MurlocWarleaderVanilla,
			CardIds.NofinCanStopUs,
			CardIds.PrimalfinLookout_UNG_937,
			CardIds.RockpoolHunter_UNG_073,
			CardIds.SiltfinSpiritwalker,
			CardIds.SirFinleyMrrgglton_ScalesOfJustice_THD_044p,
			CardIds.SouthCoastChieftain,
			CardIds.TidelostBurrower,
			CardIds.TinyfinsCaravan,
			CardIds.Toxfin_DAL_077,
			CardIds.UnderbellyAngler,
			CardIds.UniteTheMurlocs,
			CardIds.Voidgill
		);
	}

	// NAGA (12 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('NAGA')) {
		matchingCardIds.push(
			CardIds.BarbedNets,
			CardIds.BlindeyeSharpshooter_WW_402,
			CardIds.CoilCastingTavernBrawl,
			CardIds.ConchsCall,
			CardIds.CrushclawEnforcer,
			CardIds.LoadTheChamber_WW_409,
			CardIds.NagasPride,
			CardIds.OasisOutlaws_WW_404,
			CardIds.Predation,
			CardIds.SeaweedStrike,
			CardIds.SerpentWig_TSC_215,
			CardIds.SpitelashSiren
		);
	}

	// NOT_TRIBELESS (3 cards)
	if (refCard.races && refCard.races.length > 0) {
		matchingCardIds.push(
			CardIds.NzothGodOfTheDeep,
			CardIds.PowerSlider,
			CardIds.TheOneAmalgamBand
		);
	}

	// PIRATE (30 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('PIRATE')) {
		matchingCardIds.push(
			CardIds.AdrenalineFiend_VAC_927,
			CardIds.Ancharrr,
			CardIds.BeckoningBicornTavernBrawl,
			CardIds.CannonBarrage,
			CardIds.CaptainsParrotLegacy,
			CardIds.CaptainsParrotVanilla,
			CardIds.CutlassCourier,
			CardIds.DigForTreasure_TOY_510,
			CardIds.HarborScamp,
			CardIds.HozenRoughhouser_VAC_938,
			CardIds.MrSmite_DED_006,
			CardIds.ParachuteBrigand,
			CardIds.PatchesThePirate_CFM_637,
			CardIds.PatchesThePirate_LockedAndLoaded_THD_025p,
			CardIds.PirateAdmiralHooktusk,
			CardIds.RaidTheDocks,
			CardIds.RaidingParty,
			CardIds.RaidingParty_CORE_TRL_124,
			CardIds.RingmasterWhatley,
			CardIds.SailboatCaptain_VAC_937,
			CardIds.ShadyDealer,
			CardIds.SharkPuncher_WON_138,
			CardIds.ShipsCannon,
			CardIds.ShiverTheirTimbers,
			CardIds.ShoplifterGoldbeard_TOY_511,
			CardIds.Skybarge,
			CardIds.Swordfish,
			CardIds.ToyBoat_TOY_505,
			CardIds.TreasureDistributor_TOY_518,
			CardIds.WeaponsAttendant_VAC_924
		);
	}

	// TOTEM (9 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('TOTEM')) {
		matchingCardIds.push(
			CardIds.DraeneiTotemcarver_AT_047,
			CardIds.DraeneiTotemcarver_CORE_AT_047,
			CardIds.Gigantotem,
			CardIds.SplittingAxe,
			CardIds.TheStonewright,
			CardIds.ThingFromBelow,
			CardIds.ThingFromBelowCore,
			CardIds.TotemicEvidence,
			CardIds.TotemicEvidence_CORE_MAW_003
		);
	}

	// UNDEAD (40 cards)
	if (refCard.races?.map(r => r.toUpperCase()).includes('UNDEAD')) {
		matchingCardIds.push(
			CardIds.AcolyteOfDeath,
			CardIds.AcolyteOfDeath_CORE_RLK_121,
			CardIds.AmateurPuppeteer_AmateurPuppeteerToken_TOY_828t,
			CardIds.AmateurPuppeteer_TOY_828,
			CardIds.ArmsDealer_RLK_824,
			CardIds.Banshee_RLK_957,
			CardIds.BoneFlinger,
			CardIds.Bonecaller,
			CardIds.CatrinaMuerte,
			CardIds.CatrinaMuerteCore,
			CardIds.DeadAir,
			CardIds.DrakkariEmbalmer_RLK_119,
			CardIds.ElderNadox,
			CardIds.FleshBehemoth_RLK_830,
			CardIds.FleshBehemoth_RLK_Prologue_RLK_830,
			CardIds.GluthSicleTavernBrawl,
			CardIds.GluthTavernBrawl_PVPDR_Sai_T1,
			CardIds.GraveDigging,
			CardIds.HighCultistBasaleph,
			CardIds.InfantryReanimator,
			CardIds.Invincible,
			CardIds.LesserSpinelSpellstone_GreaterSpinelSpellstoneToken_TOY_825t2,
			CardIds.LesserSpinelSpellstone_SpinelSpellstoneToken_TOY_825t,
			CardIds.LesserSpinelSpellstone_TOY_825,
			CardIds.NecroticMortician,
			CardIds.NecroticMortician_CORE_RLK_116,
			CardIds.NerubianFlyer,
			CardIds.NerubianVizier,
			CardIds.NoxiousInfiltrator,
			CardIds.PoisonBreath_CORE_EDR_002,
			CardIds.ProstheticHand_DEEP_015,
			CardIds.RottingNecromancer,
			CardIds.ShadowWordUndeath,
			CardIds.SicklyGrimewalker_YOG_512,
			CardIds.SkeletalSidekickCore_RLK_958,
			CardIds.SoulburnerVaria_YOG_520,
			CardIds.TwistedTether,
			CardIds.UndyingAllies,
			CardIds.UnlivingChampion,
			CardIds.Wither
		);
	}

	// MINION (246 cards)
	if (refCard.type?.toUpperCase() === 'MINION') {
		matchingCardIds.push(
			CardIds.AegwynnTheGuardianCore,
			CardIds.AegwynnTheGuardian_LEG_CS3_001,
			CardIds.AlakirTheWindsOfTime_WON_092h,
			CardIds.AlarmedSecuritybot_YOG_510,
			CardIds.AllianceBannerman,
			CardIds.AlwaysABiggerJormungar,
			CardIds.AmitusThePeacekeeper,
			CardIds.AmitusThePeacekeeper_ReinforcedToken,
			CardIds.AncestorsCall,
			CardIds.Anchorite_GDB_441,
			CardIds.AnimaExtractor,
			CardIds.AnimaExtractor_CORE_REV_332,
			CardIds.AnimatedBerserker_CORE_ICC_238,
			CardIds.AnimatedBerserker_ICC_238,
			CardIds.Anubrekhan_RLK_659,
			CardIds.ApexisBlast,
			CardIds.Assembly,
			CardIds.Assembly_Assembly,
			CardIds.AuchenaiDeathSpeaker_GDB_469,
			CardIds.Aviana,
			CardIds.Aviana_WON_012,
			CardIds.AzsharanGardens_SunkenGardensToken,
			CardIds.BackstageBouncer,
			CardIds.BargainBin_MIS_105,
			CardIds.Barnes,
			CardIds.BatMask_DINO_402,
			CardIds.BeanstalkBrute_EDR_230,
			CardIds.Birdwatching_VAC_408,
			CardIds.BlackrockNRoll,
			CardIds.BladeOfTheBurningSun,
			CardIds.BloodMoonTavernBrawl,
			CardIds.BloodOfGhuun,
			CardIds.BobTheBartender_BG31_BOB,
			CardIds.BobTheBartender_FindATripleToken_BG31_BOBt4,
			CardIds.Boneshredder,
			CardIds.Breakdance,
			CardIds.BronzeSignetTavernBrawl,
			CardIds.BusyBot_WORK_002,
			CardIds.CapturedFlag,
			CardIds.CarnivorousCube,
			CardIds.CarnivorousCubicle_WORK_042,
			CardIds.CatrinaMuerte,
			CardIds.CatrinaMuerteCore,
			CardIds.CharredChameleon_FIR_908,
			CardIds.ChemicalSpill_TOY_602,
			CardIds.ChorusRiff,
			CardIds.ClawMachine,
			CardIds.CliffDive_VAC_926,
			CardIds.ColiferoTheArtist_TOY_703,
			CardIds.Commencement,
			CardIds.CowardlyGrunt,
			CardIds.CreationProtocol,
			CardIds.CreationProtocol_CreationProtocolToken,
			CardIds.CupOMuscle_CupOMuscleToken_VAC_338t,
			CardIds.CupOMuscle_CupOMuscleToken_VAC_338t2,
			CardIds.CupOMuscle_VAC_338,
			CardIds.DaUndatakah,
			CardIds.DealWithADevil,
			CardIds.DeckOfChaos,
			CardIds.DevilsaurMask_DINO_403,
			CardIds.DigForTreasure_TOY_510,
			CardIds.DimensionalRipper,
			CardIds.DinnerPerformer,
			CardIds.DisciplinarianGandling,
			CardIds.DiscoMaul,
			CardIds.DivineStar_GDB_460,
			CardIds.DreamboundRaptor_EDR_849,
			CardIds.DredgerStaff,
			CardIds.DredgerStaff_CORE_REV_338,
			CardIds.EchoOfMedivh,
			CardIds.EliseBadlandsSavior_WW_392,
			CardIds.ElixirOfVigorTavernBrawl,
			CardIds.ElvenMinstrel,
			CardIds.ElvenMinstrelCore,
			CardIds.Embiggen,
			CardIds.EndbringerUmbra_TLC_106,
			CardIds.Ensmallen_TOY_805,
			CardIds.EternalServitude_CORE_ICC_213,
			CardIds.EternalServitude_ICC_213,
			CardIds.Eureka,
			CardIds.EvolutionChamber_SC_021,
			CardIds.FeldoreiWarband,
			CardIds.Fetch_TOY_352,
			CardIds.Firegill_DINO_404,
			CardIds.FlashSale_TOY_716,
			CardIds.FoodFight_EntréeToken_VAC_533t,
			CardIds.FoodFight_VAC_533,
			CardIds.FreeAdmission,
			CardIds.FrontLines_Story_11_FrontLines,
			CardIds.FrontLines_TID_949,
			CardIds.FungalFortunes,
			CardIds.GatherYourParty,
			CardIds.GreedyGainsTavernBrawl,
			CardIds.GrimestreetOutfitter,
			CardIds.GrimestreetOutfitterCore,
			CardIds.GrimyGadgeteer,
			CardIds.GuidingFigure_GDB_106,
			CardIds.GuitarSoloist,
			CardIds.HabeasCorpses,
			CardIds.Hadronox_CORE_ICC_835,
			CardIds.Hadronox_ICC_835,
			CardIds.HagathasEmbrace,
			CardIds.HagathasEmbraceTavernBrawl,
			CardIds.HarmonicMetal,
			CardIds.HarmonicMetal_DissonantMetalToken,
			CardIds.HatchingCeremony_DINO_405,
			CardIds.HawkstriderRancher,
			CardIds.HealingWave,
			CardIds.HealingWave_WON_320,
			CardIds.Hellion_HellbatToken_SC_412t,
			CardIds.Hellion_SC_412,
			CardIds.HopeOfQuelthalas,
			CardIds.ImpKingRafaam_ImpKingRafaamToken,
			CardIds.ImpKingRafaam_REV_789,
			CardIds.ImpKingRafaam_REV_835,
			CardIds.ImployeeOfTheMonth_WORK_009,
			CardIds.ImprisonedScrapImp,
			CardIds.Insight,
			CardIds.Insight_InsightToken,
			CardIds.InvigoratingSermon,
			CardIds.IxlidFungalLord,
			CardIds.JepettoJoybuzz,
			CardIds.KabalTalonpriest,
			CardIds.Kazakus_IchorOfUndeathToken_CFM_621t37,
			CardIds.Kazakus_IchorOfUndeathToken_CFM_621t38,
			CardIds.Kazakus_IchorOfUndeathToken_CFM_621t39,
			CardIds.KeeperOfFlame_FIR_928,
			CardIds.KeepersStrength_YOG_509,
			CardIds.LadyInWhite,
			CardIds.LesserDiamondSpellstone,
			CardIds.LesserDiamondSpellstone_CORE_LOOT_507,
			CardIds.LesserDiamondSpellstone_DiamondSpellstoneToken,
			CardIds.LesserDiamondSpellstone_GreaterDiamondSpellstoneToken,
			CardIds.LibramOfClarity_GDB_137,
			CardIds.LightOfTheNewMoon_FIR_918,
			CardIds.Lightspeed_GDB_457,
			CardIds.LivingGarden_EDR_518,
			CardIds.LohTheLivingLegend_TLC_257,
			CardIds.LokenJailerOfYoggSaron,
			CardIds.LongneckEgg_DINO_130,
			CardIds.LorthemarTheron_RLK_593,
			CardIds.Lurker_SC_009,
			CardIds.Malfunction_MIS_107,
			CardIds.ManufacturingError_TOY_371,
			CardIds.MarkOfTheSpikeshell,
			CardIds.MaskedReveler,
			CardIds.MasterJouster,
			CardIds.MastersCall,
			CardIds.MastersCall_CORE_TRL_339,
			CardIds.MaximaBlastenheimer,
			CardIds.MeatGrinder_RLK_120,
			CardIds.Melomania,
			CardIds.Merithra_EDR_238,
			CardIds.MoatLurker,
			CardIds.MonstrousMosquito_EDR_816,
			CardIds.MoshPit,
			CardIds.Muckmorpher,
			CardIds.MuscleOTron_YOG_525,
			CardIds.MutatingInjection_NAX11_04,
			CardIds.NightmareLordXavius_EDR_856,
			CardIds.NiriOfTheCrater_TLC_836,
			CardIds.NzothGodOfTheDeep,
			CardIds.Obsidiansmith,
			CardIds.OldMilitiaHornTavernBrawl,
			CardIds.OldMilitiaHorn_MilitiaHornTavernBrawl,
			CardIds.OldMilitiaHorn_VeteransMilitiaHornTavernBrawl,
			CardIds.OrbitalHalo_GDB_439,
			CardIds.OrbitalMoon_GDB_475,
			CardIds.OutfitTailor,
			CardIds.Overheat_FIR_906,
			CardIds.OverlordSaurfang_BAR_334,
			CardIds.OverlordsWhip,
			CardIds.PaintersVirtue_TOY_810,
			CardIds.PantherMask_DINO_432,
			CardIds.PendantOfEarth_DEEP_026,
			CardIds.PileOnHeroic,
			CardIds.PortalVanguard_TIME_003,
			CardIds.PowerChordSynchronize,
			CardIds.PowerSlider,
			CardIds.Prescience,
			CardIds.ProvingGrounds,
			CardIds.Psychopomp,
			CardIds.PuppetmasterDorian_MIS_026,
			CardIds.RaiseDead_SCH_514,
			CardIds.Reforestation_EDR_843,
			CardIds.Reforestation_Fertilize_EDR_843b,
			CardIds.Reforestation_ReforestationToken_EDR_843t1,
			CardIds.Resurrect_BRM_017,
			CardIds.Resuscitate_TLC_818,
			CardIds.RiskySkipper,
			CardIds.RotheartDryad_EDR_485,
			CardIds.RunningWild,
			CardIds.RunningWild_RunningWild,
			CardIds.SeafloorSavior_TSC_083,
			CardIds.Seismopod_DINO_421,
			CardIds.SesselieOfTheFaeCourt_REV_319,
			CardIds.SesselieOfTheFaeCourt_REV_782,
			CardIds.ShadowEssence_CORE_ICC_235,
			CardIds.ShadowEssence_ICC_235,
			CardIds.Shadowcaster,
			CardIds.Shadowcasting101TavernBrawl,
			CardIds.ShadowstepCore,
			CardIds.ShadowstepLegacy,
			CardIds.ShadowstepVanilla,
			CardIds.ShroudOfConcealment,
			CardIds.SilvermoonBrochure_WORK_017,
			CardIds.SilvermoonPortal,
			CardIds.SilvermoonPortal_WON_309,
			CardIds.SmolderingStrength_FIR_914,
			CardIds.SoulrestCeremony_DINO_417,
			CardIds.SowTheSeedsTavernBrawl,
			CardIds.SpiritOfTheBadlands_MirageToken_WW_337t,
			CardIds.SpiritOfTheBadlands_WW_337,
			CardIds.SpiritPeddler_WORK_015,
			CardIds.SpotTheDifference_TOY_374,
			CardIds.SrExcavatorTavernBrawl,
			CardIds.StoryOfBarnabus_TLC_231,
			CardIds.StrengthInNumbers,
			CardIds.SuperchargeTavernBrawl,
			CardIds.SurvivalOfTheFittest,
			CardIds.Switcheroo,
			CardIds.TenGallonHat_WW_811,
			CardIds.TheBoomReaver,
			CardIds.TheBoomship,
			CardIds.TheDarkPortal_BT_302,
			CardIds.TheLichKing_ArmyOfTheFrozenThroneToken,
			CardIds.TheOneAmalgamBand,
			CardIds.TogwagglesScheme,
			CardIds.TravelmasterDungar_WORK_043,
			CardIds.TyrsTears,
			CardIds.TyrsTears_TyrsTearsToken,
			CardIds.UngoroBrochure_WORK_050,
			CardIds.UnlockedPotential,
			CardIds.VarianWrynn_AT_072,
			CardIds.Vectus,
			CardIds.ViciousBloodworm_RLK_711,
			CardIds.VitalitySurge,
			CardIds.WakenerOfSouls_GDB_468,
			CardIds.WebOfDeception_EDR_523,
			CardIds.XyrellaTheDevout,
			CardIds.YoggInTheBox_TOY_372,
			CardIds.YouthfulBrewmaster,
			CardIds.YouthfulBrewmasterCore,
			CardIds.YouthfulBrewmasterLegacy,
			CardIds.YouthfulBrewmasterVanilla,
			CardIds.YshaarjRageUnbound
		);
	}

	// Return combined selector if any matches found
	if (matchingCardIds.length > 0) {
		return and(side(inputSide), or(inDeck, inHand), cardIs(...matchingCardIds));
	}
	return null;
};